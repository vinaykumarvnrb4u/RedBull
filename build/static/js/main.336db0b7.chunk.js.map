{"version":3,"sources":["assets/bull.png","components/AppBar.js","components/SideBar.js","components/Dialog.js","components/Alert.js","components/ProgressBar.js","components/Table.js","sockets/index.js","utils/services.js","utils/constants.js","Pages/Home.js","App.js","reportWebVitals.js","index.js"],"names":["TopBar","title","AppBar","position","sx","zIndex","theme","drawer","backgroundColor","palette","common","black","Toolbar","Typography","variant","noWrap","component","SideBar","states","handlecurrentStatus","currentStatus","Drawer","width","flexShrink","boxSizing","Box","overflow","List","map","s","i","ListItemButton","onClick","e","status","selected","ListItemIcon","icon","ListItemText","primary","align","secondary","count","ScrollDialog","dialog","closeModal","data","dialogButtons","showJson","dialogTitle","descriptionElementRef","React","descriptionElement","current","focus","Dialog","open","onClose","scroll","DialogTitle","id","DialogContent","dividers","DialogContentText","ref","tabIndex","src","DialogActions","b","Button","label","SnackAlert","snack","closeSnack","snackSeverity","snackMessage","Stack","spacing","Snackbar","anchorOrigin","vertical","horizontal","TransitionComponent","Fade","autoHideDuration","Alert","severity","LinearColor","LinearProgress","color","StyledTableCell","styled","TableCell","tableCellClasses","head","white","body","fontSize","StyledTableRow","TableRow","action","hover","border","CustomizedTables","handleAction","actions","keyName","length","columns","keys","Object","push","formatColumns","getRow","row","rowCells","column","scope","actionCell","Tooltip","TransitionProps","timeout","name","IconButton","size","queue","concat","TableContainer","Paper","maxHeight","Table","minWidth","stickyHeader","TableHead","colSpan","toUpperCase","TableBody","socket","io","process","on","console","log","REACT_APP_API_URL","getData","a","axios","get","getJobInfo","deleteJobById","delete","retryJob","put","Home","props","getDetails","state","setState","showProgress","jobs","sizeByCategory","newStates","err","jobId","dialogData","res","message","dialogHandler","error","this","prevProps","prevState","find","display","flexGrow","mt","ml","mr","key","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.336db0b7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bull.11a7367f.png\";","import React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport logo from '../assets/bull.png';\r\n\r\nvar classes = {\r\n  logo: {\r\n    margin: 'auto',\r\n    textAlign: 'center',\r\n    maxWidth: '50%',\r\n    maxHeight: '70%',\r\n  },\r\n  logoHorizontallyCenter: {\r\n    position: 'absolute',\r\n    left: '50%',\r\n    top: '50%',\r\n    transform: 'translate(-50%, -50%)'\r\n  }\r\n};\r\n\r\nconst TopBar = ({ title }) => {\r\n  return (\r\n    <AppBar position=\"fixed\" sx={{\r\n      zIndex: (theme) => theme.zIndex.drawer + 1,\r\n      backgroundColor: (theme) => theme.palette.common.black\r\n    }}>\r\n      <Toolbar>\r\n        <Typography variant=\"h4\" noWrap component=\"div\">\r\n          {title}\r\n        </Typography>\r\n        {/* <div style={classes.logoHorizontallyCenter}>\r\n          <img src={logo} className={classes.logo} alt=\"logo\" />\r\n        </div> */}\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\nexport default TopBar;","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport List from '@mui/material/List';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst SideBar = ({ states, handlecurrentStatus, currentStatus }) => {\r\n    return (\r\n        <Drawer\r\n            variant=\"permanent\"\r\n            sx={{\r\n                width: drawerWidth,\r\n                flexShrink: 0,\r\n                [`& .MuiDrawer-paper`]: { width: drawerWidth, boxSizing: 'border-box' },\r\n            }}\r\n        >\r\n            <Toolbar />\r\n            <Box sx={{ overflow: 'auto' }}>\r\n                <List>\r\n                    {states.map((s, i) => (\r\n                        <ListItemButton key={`${s.status}-LIB-${i}`} onClick={(e) => handlecurrentStatus(e, s.status)} selected={currentStatus === s.status}>\r\n                            <ListItemIcon key={`${s.status}-LII-${i}`}>\r\n                                <s.icon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={<Typography align='left' variant='button'>{s.status}</Typography>} />\r\n                            <ListItemText secondary={<Typography align='right' variant='subtitle2'>{s.count}</Typography>} />\r\n                        </ListItemButton>\r\n                    ))}\r\n                </List>\r\n            </Box>\r\n        </Drawer>\r\n    );\r\n}\r\n\r\nexport default SideBar;","import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport ReactJson from 'react-json-view'\r\n\r\nexport default function ScrollDialog({ dialog, closeModal, data, dialogButtons, showJson, dialogTitle }) {\r\n  const descriptionElementRef = React.useRef(null);\r\n  React.useEffect(() => {\r\n    if (dialog) {\r\n      const { current: descriptionElement } = descriptionElementRef;\r\n      if (descriptionElement !== null) {\r\n        descriptionElement.focus();\r\n      }\r\n    }\r\n  }, [dialog]);\r\n\r\n  return (\r\n    <Dialog\r\n      open={dialog}\r\n      onClose={closeModal}\r\n      scroll=\"paper\"\r\n      aria-labelledby=\"scroll-dialog-title\"\r\n      aria-describedby=\"scroll-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"scroll-dialog-title\">{dialogTitle}</DialogTitle>\r\n      <DialogContent dividers>\r\n        <DialogContentText\r\n          id=\"scroll-dialog-description\"\r\n          ref={descriptionElementRef}\r\n          tabIndex={-1}\r\n          component={'span'}\r\n        >\r\n          { showJson ? <ReactJson src={data} /> : data }\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        {dialogButtons && dialogButtons.map(b => <Button onClick={b.onClick}>{b.label}</Button>)}\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","import * as React from 'react';\nimport Alert from '@mui/material/Alert';\nimport Stack from '@mui/material/Stack';\nimport Snackbar from '@mui/material/Snackbar';\nimport Fade from '@mui/material/Fade';\n\nexport default function SnackAlert({ snack, closeSnack, snackSeverity, snackMessage }) {\n    return (\n        <Stack sx={{ width: '100%' }} spacing={2}>\n            <Snackbar\n                anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n                open={snack}\n                onClose={closeSnack}\n                TransitionComponent={Fade}\n                autoHideDuration={3000}\n            >\n                <Alert severity={snackSeverity}>{snackMessage}</Alert>\n            </Snackbar>\n        </Stack>\n    );\n}\n","import * as React from 'react';\r\nimport Stack from '@mui/material/Stack';\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\n\r\nexport default function LinearColor() {\r\n  return (\r\n    <Stack sx={{ width: '100%' }} position=\"fixed\">\r\n      <LinearProgress color=\"inherit\" />\r\n    </Stack>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport Fade from '@mui/material/Fade';\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n    [`&.${tableCellClasses.head}`]: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white,\r\n    },\r\n    [`&.${tableCellClasses.body}`]: {\r\n        fontSize: 14,\r\n    },\r\n}));\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n    '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.action.hover,\r\n    },\r\n    // hide last border\r\n    '&:last-child td, &:last-child th': {\r\n        border: 0,\r\n    },\r\n}));\r\n\r\nexport default function CustomizedTables({ data, handleAction, actions, keyName }) {\r\n    if (!data || !data.length) return <div> NO DATA </div>;\r\n    \r\n    const formatColumns = () => {\r\n        const keys = Object.keys(data[0]);\r\n        if (keys.length && actions && actions.length) keys.push('actions');\r\n        return keys;\r\n    }\r\n    const columns = formatColumns();\r\n\r\n    const getRow = row => {\r\n        const cols = Object.keys(data[0]);\r\n        const rowCells = cols.map((column, i) => <StyledTableCell component=\"th\" scope=\"row\" key={`${column}-${i}`}>{row[column]}</StyledTableCell>)\r\n        if (!actions || !actions.length) return rowCells;\r\n        const actionCell = (<StyledTableCell component=\"th\" scope=\"row\" key={`$action-${row.id}`}>\r\n            {actions.map((action, i) => (\r\n                <Tooltip TransitionComponent={Fade} TransitionProps={{ timeout: 600 }} title={action.name} key={`${action}-${i}`}>\r\n                    <IconButton aria-label=\"delete\" size=\"small\" onClick={(e) => handleAction(e, row.queue, row.id, action.name)} key={`${i}`}>\r\n                        <action.icon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            ))}\r\n        </StyledTableCell>);\r\n        return rowCells.concat(actionCell);\r\n    }\r\n\r\n    return (\r\n        <TableContainer component={Paper} sx={{ maxHeight: 700 }}>\r\n            <Table sx={{ minWidth: 700 }} stickyHeader aria-label=\"customized table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <StyledTableCell align=\"center\" colSpan={columns.length}>\r\n                            {keyName.toUpperCase()}\r\n                        </StyledTableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                        {columns.map((column) =>\r\n                            <StyledTableCell key={column}> {column.toUpperCase()} </StyledTableCell>\r\n                        )}\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {data.map((row, i) => (\r\n                        <StyledTableRow key={`${row.id || row.name}-${i}`}>\r\n                            {getRow(row, columns)}\r\n                        </StyledTableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n}\r\n","import io from 'socket.io-client';\r\n\r\nconst { REACT_APP_SOCKET_URL } = process.env;\r\n\r\nconst socket = io(REACT_APP_SOCKET_URL);\r\nsocket.on('connect', () => {\r\n    console.log('connected to socket');\r\n});\r\n\r\nexport default socket;","import axios from 'axios';\r\nconst { REACT_APP_API_URL } = process.env;\r\n\r\nexport const getData = async (status) => {\r\n    try {\r\n        const { data } = await axios.get(`${REACT_APP_API_URL}/${status}`);\r\n        return data;\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\nexport const getJobInfo = async (queue, id) => {\r\n    try {\r\n        const { data } = await axios.get(`${REACT_APP_API_URL}/job/${queue}/${id}`);\r\n        return data;\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nexport const deleteJobById = async (queue, id) => {\r\n    try {\r\n        const { data } = await axios.delete(`${REACT_APP_API_URL}/job/${queue}/${id}`);\r\n        return data;\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nexport const retryJob = async (queue, id) => {\r\n    try {\r\n        const { data } = await axios.put(`${REACT_APP_API_URL}/job/${queue}/${id}`);\r\n        return data;\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n","import DangerousSharpIcon from '@mui/icons-material/DangerousSharp';\r\nimport FlashOnSharpIcon from '@mui/icons-material/FlashOnSharp';\r\nimport DoneSharpIcon from '@mui/icons-material/DoneSharp';\r\nimport QueryBuilderSharpIcon from '@mui/icons-material/QueryBuilderSharp';\r\nimport DynamicFeedSharpIcon from '@mui/icons-material/DynamicFeedSharp';\r\nimport AccessAlarmIcon from '@mui/icons-material/AccessAlarm';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport ReplayIcon from '@mui/icons-material/Replay';\r\n\r\nexport const states = [\r\n    {\r\n        status: 'active',\r\n        count: 0,\r\n        icon: () => <FlashOnSharpIcon />,\r\n        actions: [{\r\n            name: 'info',\r\n            icon: () => <InfoIcon fontSize=\"inherit\" />\r\n        }, {\r\n            name: 'retry',\r\n            icon: () => <ReplayIcon fontSize=\"inherit\" />\r\n        }, {\r\n            name: 'delete',\r\n            icon: () => <DeleteForeverIcon fontSize=\"inherit\" />\r\n        }]\r\n    },\r\n    {\r\n        status: 'pending',\r\n        count: 0,\r\n        icon: () => <QueryBuilderSharpIcon />,\r\n        actions: [{\r\n            name: 'info',\r\n            icon: () => <InfoIcon fontSize=\"inherit\" />\r\n        }, {\r\n            name: 'delete',\r\n            icon: () => <DeleteForeverIcon fontSize=\"inherit\" />\r\n        }]\r\n    },\r\n    {\r\n        status: 'completed',\r\n        count: 0,\r\n        icon: () => <DoneSharpIcon />,\r\n        actions: [{\r\n            name: 'info',\r\n            icon: () => <InfoIcon fontSize=\"inherit\" />\r\n        }, {\r\n            name: 'retry',\r\n            icon: () => <ReplayIcon fontSize=\"inherit\" />\r\n        }, {\r\n            name: 'delete',\r\n            icon: () => <DeleteForeverIcon fontSize=\"inherit\" />\r\n        }]\r\n    },\r\n    {\r\n        status: 'failed',\r\n        count: 0,\r\n        icon: () => <DangerousSharpIcon />,\r\n        actions: [{\r\n            name: 'info',\r\n            icon: () => <InfoIcon fontSize=\"inherit\" />\r\n        }, {\r\n            name: 'retry',\r\n            icon: () => <ReplayIcon fontSize=\"inherit\" />\r\n        }, {\r\n            name: 'delete',\r\n            icon: () => <DeleteForeverIcon fontSize=\"inherit\" />\r\n        }]\r\n    },\r\n    {\r\n        status: 'delayed',\r\n        count: 0,\r\n        icon: () => <AccessAlarmIcon />,\r\n        actions: [{\r\n            name: 'info',\r\n            icon: () => <InfoIcon fontSize=\"inherit\" />\r\n        }, {\r\n            name: 'delete',\r\n            icon: () => <DeleteForeverIcon fontSize=\"inherit\" />\r\n        }]\r\n    },\r\n    {\r\n        status: 'queues',\r\n        count: 0,\r\n        icon: () => <DynamicFeedSharpIcon />\r\n    },\r\n];","import { Component } from 'react';\r\n\r\nimport Box from '@mui/material/Box';\r\n\r\nimport TopBar from '../components/AppBar';\r\nimport SideBar from '../components/SideBar';\r\nimport Modal from '../components/Dialog';\r\nimport SnackAlert from '../components/Alert';\r\nimport ProgressBar from '../components/ProgressBar';\r\nimport Table from '../components/Table';\r\n\r\nimport socket from '../sockets';\r\nimport { getData, getJobInfo, deleteJobById, retryJob } from '../utils/services';\r\nimport { states } from '../utils/constants';\r\n\r\n\r\nconst title = 'Red Bull';\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentStatus: 'active',\r\n            data: [],\r\n            error: null,\r\n            states,\r\n            dialog: false,\r\n            dialogData: null,\r\n            dialogButtons: [],\r\n            dialogTitle: '',\r\n            actions: [],\r\n            snack: false,\r\n            snackMessage: '',\r\n            snackSeverity: 'success',\r\n            showJson: false,\r\n            showProgress: false\r\n        }\r\n    }\r\n\r\n    getDetails = async (currentStatus) => {\r\n        try {\r\n            const { states } = this.state;\r\n            this.setState({ showProgress: true });\r\n            const { jobs, count, sizeByCategory } = await getData(currentStatus);\r\n            const newStates = states.map((s) => {\r\n                if (s.status === 'pending') s.count = count['wait'];\r\n                else s.count = count[s.status];\r\n                return s;\r\n            })\r\n            this.setState({ data: {} });\r\n            this.setState({ data: { sizeByCategory, jobs }, states: newStates, showProgress: false });\r\n        } catch (err) {\r\n            this.setState({ err, showProgress: false });\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getDetails(this.state.currentStatus);\r\n        socket.on('count', (count) => {\r\n            this.getDetails(this.state.currentStatus);\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const { currentStatus } = this.state;\r\n        if (prevState.currentStatus !== currentStatus) this.getDetails(currentStatus);\r\n    }\r\n\r\n    handlecurrentStatus = (e, name) => {\r\n        this.setState({\r\n            currentStatus: name\r\n        });\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({ dialog: false });\r\n    }\r\n\r\n    handleAction = async (queue, jobId, action) => {\r\n        if (!queue || !jobId) return;\r\n        try {\r\n            this.setState({ showProgress: true });\r\n            if (action === 'info') {\r\n                let dialogData = {};\r\n                if (!this.state.dialog && queue && jobId) {\r\n                    dialogData = await getJobInfo(queue, jobId);\r\n                    this.setState({\r\n                        dialog: true,\r\n                        dialogData,\r\n                        showProgress: false\r\n                    });\r\n                }\r\n            } else if (action === 'delete') {\r\n                this.closeModal();\r\n                const res = await deleteJobById(queue, jobId);\r\n                this.setState({\r\n                    snack: true,\r\n                    snackMessage: res.message,\r\n                    showProgress: false\r\n                });\r\n            } else if (action === 'retry') {\r\n                this.closeModal();\r\n                const res = await retryJob(queue, jobId);\r\n                this.setState({\r\n                    snack: true,\r\n                    snackMessage: res.message,\r\n                    snackSeverity: 'success',\r\n                    showProgress: false\r\n                });\r\n            }\r\n        }\r\n        catch (err) {\r\n            this.setState({\r\n                snack: true,\r\n                snackMessage: err.message,\r\n                snackSeverity: 'error',\r\n                showProgress: false\r\n            });\r\n        }\r\n    }\r\n\r\n    dialogHandler = (e, queue, jobId, action) => {\r\n        const dialogButtons = [\r\n            {\r\n                label: 'YES',\r\n                onClick: () => this.handleAction(queue, jobId, action)\r\n            },\r\n            {\r\n                label: 'NO',\r\n                onClick: () => this.closeModal()\r\n            }\r\n        ];\r\n        if (action === 'info') {\r\n            this.setState({\r\n                dialogButtons: [{ label: 'cancel', onClick: () => this.closeModal() }],\r\n                showJson: true,\r\n                dialogTitle: 'Info'\r\n            })\r\n            this.handleAction(queue, jobId, action);\r\n        }\r\n        else if (action === 'delete') {\r\n            this.setState({\r\n                dialog: true,\r\n                dialogData: 'Are you sure, you want to delete?',\r\n                dialogButtons,\r\n                showJson: false,\r\n                dialogTitle: 'Delete'\r\n            });\r\n        }\r\n        else if (action === 'retry') {\r\n            this.setState({\r\n                dialog: true,\r\n                dialogData: 'Are you sure, you want to retry?',\r\n                dialogButtons,\r\n                showJson: false,\r\n                dialogTitle: 'Retry'\r\n            });\r\n        }\r\n    }\r\n\r\n    closeSnack = () => this.setState({ snack: false, snackMessage: '' })\r\n\r\n    render() {\r\n        const { currentStatus, data, states, dialog, dialogData, dialogButtons, dialogTitle, snack, snackMessage, snackSeverity, showJson, showProgress } = this.state;\r\n        const { actions } = states.find(s => s.status === currentStatus);\r\n        return (\r\n            <Box sx={{ display: 'flex' }}>\r\n                <TopBar title={title} />\r\n                <SideBar states={states} currentStatus={currentStatus} handlecurrentStatus={this.handlecurrentStatus} />\r\n                {/* <Toolbar /> */}\r\n                <Box component=\"main\" sx={{ flexGrow: 1, mt: 9, ml: 2, mr: 1 }}>\r\n                    {showProgress && <ProgressBar />}\r\n                    <h4>{currentStatus.toUpperCase()}</h4>\r\n                    { Object.keys(data).map((key) => <Table data={data[key]} handleAction={this.dialogHandler} actions={ key === 'sizeByCategory' ? [] :actions } keyName={key} />) }\r\n                    <Modal dialog={dialog} data={dialogData} closeModal={this.closeModal} dialogButtons={dialogButtons} showJson={showJson} dialogTitle={dialogTitle} />\r\n                    <SnackAlert snack={snack} snackMessage={snackMessage} snackSeverity={snackSeverity} closeSnack={this.closeSnack} />\r\n                </Box>\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import Home from './Pages/Home';\n\nfunction App() {\n  return <Home/>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}